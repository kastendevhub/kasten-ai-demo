apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k10animalai.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "k10animalai.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.k10animalai.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "k10animalai.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k10animalai.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.qdrant.enabled }}
      initContainers:
      - name: wait-for-qdrant
        image: busybox:1.35
        command: 
        - sh
        - -c
        - |
          echo "Waiting for Qdrant to be ready..."
          until nc -z {{ include "k10animalai.qdrantHost" . }} {{ .Values.qdrant.port }}; do
            echo "Qdrant not ready, sleeping 5s..."
            sleep 5
          done
          echo "Qdrant is ready!"
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "k10animalai.image" . }}
        imagePullPolicy: {{ .Values.k10animalai.image.pullPolicy }}
        ports:
        - containerPort: 5000
          protocol: TCP
        env:
        - name: QDRANT_HOST
          value: {{ include "k10animalai.qdrantHost" . | quote }}
        - name: QDRANT_PORT
          value: {{ .Values.qdrant.port | default "6333" | quote }}
        - name: FLASK_ENV
          value: {{ .Values.flask.env | default "production" | quote }}
        - name: FLASK_DEBUG
          value: {{ .Values.flask.debug | default "False" | quote }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path | default "/health" }}
            port: 5000
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 30 }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 10 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path | default "/health" }}
            port: 5000
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 10 }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 15 }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5 }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 3 }}
        {{- end }}
        {{- if .Values.resources }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
